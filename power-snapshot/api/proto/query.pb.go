// Copyright (C) 2023-2024 StorSwift Inc.
// This file is part of the PowerVoting library.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package snapshot

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncAllAddrPowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId int64 `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
}

func (x *SyncAllAddrPowerRequest) Reset() {
	*x = SyncAllAddrPowerRequest{}
	mi := &file_query1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAllAddrPowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAllAddrPowerRequest) ProtoMessage() {}

func (x *SyncAllAddrPowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAllAddrPowerRequest.ProtoReflect.Descriptor instead.
func (*SyncAllAddrPowerRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{0}
}

func (x *SyncAllAddrPowerRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

type AddressPowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId     int64  `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	RandomNum int32  `protobuf:"varint,3,opt,name=random_num,json=randomNum,proto3" json:"random_num,omitempty"`
}

func (x *AddressPowerRequest) Reset() {
	*x = AddressPowerRequest{}
	mi := &file_query1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressPowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPowerRequest) ProtoMessage() {}

func (x *AddressPowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPowerRequest.ProtoReflect.Descriptor instead.
func (*AddressPowerRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{1}
}

func (x *AddressPowerRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

func (x *AddressPowerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressPowerRequest) GetRandomNum() int32 {
	if x != nil {
		return x.RandomNum
	}
	return 0
}

type SyncDateHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId int64 `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
}

func (x *SyncDateHeightRequest) Reset() {
	*x = SyncDateHeightRequest{}
	mi := &file_query1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDateHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDateHeightRequest) ProtoMessage() {}

func (x *SyncDateHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDateHeightRequest.ProtoReflect.Descriptor instead.
func (*SyncDateHeightRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{2}
}

func (x *SyncDateHeightRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

type SyncAddrPowerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId   int64  `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *SyncAddrPowerRequest) Reset() {
	*x = SyncAddrPowerRequest{}
	mi := &file_query1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAddrPowerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddrPowerRequest) ProtoMessage() {}

func (x *SyncAddrPowerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddrPowerRequest.ProtoReflect.Descriptor instead.
func (*SyncAddrPowerRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{3}
}

func (x *SyncAddrPowerRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

func (x *SyncAddrPowerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DataHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId int64  `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
	Day   string `protobuf:"bytes,2,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *DataHeightRequest) Reset() {
	*x = DataHeightRequest{}
	mi := &file_query1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHeightRequest) ProtoMessage() {}

func (x *DataHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHeightRequest.ProtoReflect.Descriptor instead.
func (*DataHeightRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{4}
}

func (x *DataHeightRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

func (x *DataHeightRequest) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

type AddressPowerByDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId   int64  `protobuf:"varint,1,opt,name=netId,proto3" json:"netId,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Day     string `protobuf:"bytes,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *AddressPowerByDayRequest) Reset() {
	*x = AddressPowerByDayRequest{}
	mi := &file_query1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressPowerByDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPowerByDayRequest) ProtoMessage() {}

func (x *AddressPowerByDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPowerByDayRequest.ProtoReflect.Descriptor instead.
func (*AddressPowerByDayRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{5}
}

func (x *AddressPowerByDayRequest) GetNetId() int64 {
	if x != nil {
		return x.NetId
	}
	return 0
}

func (x *AddressPowerByDayRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressPowerByDayRequest) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

type DataHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day    string `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *DataHeightResponse) Reset() {
	*x = DataHeightResponse{}
	mi := &file_query1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHeightResponse) ProtoMessage() {}

func (x *DataHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHeightResponse.ProtoReflect.Descriptor instead.
func (*DataHeightResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{6}
}

func (x *DataHeightResponse) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *DataHeightResponse) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AddressPowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SpPower          string `protobuf:"bytes,2,opt,name=sp_power,json=spPower,proto3" json:"sp_power,omitempty"`
	ClientPower      string `protobuf:"bytes,3,opt,name=client_power,json=clientPower,proto3" json:"client_power,omitempty"`
	TokenHolderPower string `protobuf:"bytes,4,opt,name=token_holder_power,json=tokenHolderPower,proto3" json:"token_holder_power,omitempty"`
	DeveloperPower   string `protobuf:"bytes,5,opt,name=developer_power,json=developerPower,proto3" json:"developer_power,omitempty"`
	BlockHeight      int64  `protobuf:"varint,6,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	DateStr          string `protobuf:"bytes,7,opt,name=date_str,json=dateStr,proto3" json:"date_str,omitempty"`
}

func (x *AddressPowerResponse) Reset() {
	*x = AddressPowerResponse{}
	mi := &file_query1_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressPowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressPowerResponse) ProtoMessage() {}

func (x *AddressPowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressPowerResponse.ProtoReflect.Descriptor instead.
func (*AddressPowerResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{7}
}

func (x *AddressPowerResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressPowerResponse) GetSpPower() string {
	if x != nil {
		return x.SpPower
	}
	return ""
}

func (x *AddressPowerResponse) GetClientPower() string {
	if x != nil {
		return x.ClientPower
	}
	return ""
}

func (x *AddressPowerResponse) GetTokenHolderPower() string {
	if x != nil {
		return x.TokenHolderPower
	}
	return ""
}

func (x *AddressPowerResponse) GetDeveloperPower() string {
	if x != nil {
		return x.DeveloperPower
	}
	return ""
}

func (x *AddressPowerResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *AddressPowerResponse) GetDateStr() string {
	if x != nil {
		return x.DateStr
	}
	return ""
}

type SyncAllAddrPowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncAllAddrPowerResponse) Reset() {
	*x = SyncAllAddrPowerResponse{}
	mi := &file_query1_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAllAddrPowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAllAddrPowerResponse) ProtoMessage() {}

func (x *SyncAllAddrPowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAllAddrPowerResponse.ProtoReflect.Descriptor instead.
func (*SyncAllAddrPowerResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{8}
}

type SyncDateHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncDateHeightResponse) Reset() {
	*x = SyncDateHeightResponse{}
	mi := &file_query1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDateHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDateHeightResponse) ProtoMessage() {}

func (x *SyncDateHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDateHeightResponse.ProtoReflect.Descriptor instead.
func (*SyncDateHeightResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{9}
}

type SyncAddrPowerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncAddrPowerResponse) Reset() {
	*x = SyncAddrPowerResponse{}
	mi := &file_query1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAddrPowerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddrPowerResponse) ProtoMessage() {}

func (x *SyncAddrPowerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddrPowerResponse.ProtoReflect.Descriptor instead.
func (*SyncAddrPowerResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{10}
}

type SyncAllDeveloperWeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncAllDeveloperWeightRequest) Reset() {
	*x = SyncAllDeveloperWeightRequest{}
	mi := &file_query1_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAllDeveloperWeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAllDeveloperWeightRequest) ProtoMessage() {}

func (x *SyncAllDeveloperWeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAllDeveloperWeightRequest.ProtoReflect.Descriptor instead.
func (*SyncAllDeveloperWeightRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{11}
}

type SyncAllDeveloperWeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncAllDeveloperWeightResponse) Reset() {
	*x = SyncAllDeveloperWeightResponse{}
	mi := &file_query1_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncAllDeveloperWeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAllDeveloperWeightResponse) ProtoMessage() {}

func (x *SyncAllDeveloperWeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAllDeveloperWeightResponse.ProtoReflect.Descriptor instead.
func (*SyncAllDeveloperWeightResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{12}
}

type SyncDeveloperWeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateStr string `protobuf:"bytes,1,opt,name=date_str,json=dateStr,proto3" json:"date_str,omitempty"`
}

func (x *SyncDeveloperWeightRequest) Reset() {
	*x = SyncDeveloperWeightRequest{}
	mi := &file_query1_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDeveloperWeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDeveloperWeightRequest) ProtoMessage() {}

func (x *SyncDeveloperWeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDeveloperWeightRequest.ProtoReflect.Descriptor instead.
func (*SyncDeveloperWeightRequest) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{13}
}

func (x *SyncDeveloperWeightRequest) GetDateStr() string {
	if x != nil {
		return x.DateStr
	}
	return ""
}

type SyncDeveloperWeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncDeveloperWeightResponse) Reset() {
	*x = SyncDeveloperWeightResponse{}
	mi := &file_query1_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDeveloperWeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDeveloperWeightResponse) ProtoMessage() {}

func (x *SyncDeveloperWeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query1_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDeveloperWeightResponse.ProtoReflect.Descriptor instead.
func (*SyncDeveloperWeightResponse) Descriptor() ([]byte, []int) {
	return file_query1_proto_rawDescGZIP(), []int{14}
}

var File_query1_proto protoreflect.FileDescriptor

var file_query1_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x2f, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x22,
	0x2d, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x46,
	0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x61, 0x79, 0x22, 0x5c, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x42, 0x79, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61,
	0x79, 0x22, 0x3e, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x83, 0x02, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c,
	0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x53, 0x79, 0x6e, 0x63, 0x41,
	0x6c, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x1a, 0x53, 0x79, 0x6e,
	0x63, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xe7, 0x05, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x52,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x1d, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x10, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x21, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x16, 0x53, 0x79,
	0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x6c, 0x6c,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x79, 0x6e,
	0x63, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x24, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1b, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x42, 0x79, 0x44, 0x61, 0x79, 0x12, 0x22, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x79, 0x44,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_query1_proto_rawDescOnce sync.Once
	file_query1_proto_rawDescData = file_query1_proto_rawDesc
)

func file_query1_proto_rawDescGZIP() []byte {
	file_query1_proto_rawDescOnce.Do(func() {
		file_query1_proto_rawDescData = protoimpl.X.CompressGZIP(file_query1_proto_rawDescData)
	})
	return file_query1_proto_rawDescData
}

var file_query1_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_query1_proto_goTypes = []any{
	(*SyncAllAddrPowerRequest)(nil),        // 0: snapshot.SyncAllAddrPowerRequest
	(*AddressPowerRequest)(nil),            // 1: snapshot.AddressPowerRequest
	(*SyncDateHeightRequest)(nil),          // 2: snapshot.SyncDateHeightRequest
	(*SyncAddrPowerRequest)(nil),           // 3: snapshot.SyncAddrPowerRequest
	(*DataHeightRequest)(nil),              // 4: snapshot.DataHeightRequest
	(*AddressPowerByDayRequest)(nil),       // 5: snapshot.AddressPowerByDayRequest
	(*DataHeightResponse)(nil),             // 6: snapshot.DataHeightResponse
	(*AddressPowerResponse)(nil),           // 7: snapshot.AddressPowerResponse
	(*SyncAllAddrPowerResponse)(nil),       // 8: snapshot.SyncAllAddrPowerResponse
	(*SyncDateHeightResponse)(nil),         // 9: snapshot.SyncDateHeightResponse
	(*SyncAddrPowerResponse)(nil),          // 10: snapshot.SyncAddrPowerResponse
	(*SyncAllDeveloperWeightRequest)(nil),  // 11: snapshot.SyncAllDeveloperWeightRequest
	(*SyncAllDeveloperWeightResponse)(nil), // 12: snapshot.SyncAllDeveloperWeightResponse
	(*SyncDeveloperWeightRequest)(nil),     // 13: snapshot.SyncDeveloperWeightRequest
	(*SyncDeveloperWeightResponse)(nil),    // 14: snapshot.SyncDeveloperWeightResponse
}
var file_query1_proto_depIdxs = []int32{
	1,  // 0: snapshot.Snapshot.GetAddressPower:input_type -> snapshot.AddressPowerRequest
	2,  // 1: snapshot.Snapshot.SyncDateHeight:input_type -> snapshot.SyncDateHeightRequest
	3,  // 2: snapshot.Snapshot.SyncAddrPower:input_type -> snapshot.SyncAddrPowerRequest
	0,  // 3: snapshot.Snapshot.SyncAllAddrPower:input_type -> snapshot.SyncAllAddrPowerRequest
	11, // 4: snapshot.Snapshot.SyncAllDeveloperWeight:input_type -> snapshot.SyncAllDeveloperWeightRequest
	13, // 5: snapshot.Snapshot.SyncDeveloperWeight:input_type -> snapshot.SyncDeveloperWeightRequest
	4,  // 6: snapshot.Snapshot.GetDataHeight:input_type -> snapshot.DataHeightRequest
	5,  // 7: snapshot.Snapshot.GetAddressPowerByDay:input_type -> snapshot.AddressPowerByDayRequest
	7,  // 8: snapshot.Snapshot.GetAddressPower:output_type -> snapshot.AddressPowerResponse
	9,  // 9: snapshot.Snapshot.SyncDateHeight:output_type -> snapshot.SyncDateHeightResponse
	10, // 10: snapshot.Snapshot.SyncAddrPower:output_type -> snapshot.SyncAddrPowerResponse
	8,  // 11: snapshot.Snapshot.SyncAllAddrPower:output_type -> snapshot.SyncAllAddrPowerResponse
	12, // 12: snapshot.Snapshot.SyncAllDeveloperWeight:output_type -> snapshot.SyncAllDeveloperWeightResponse
	14, // 13: snapshot.Snapshot.SyncDeveloperWeight:output_type -> snapshot.SyncDeveloperWeightResponse
	6,  // 14: snapshot.Snapshot.GetDataHeight:output_type -> snapshot.DataHeightResponse
	7,  // 15: snapshot.Snapshot.GetAddressPowerByDay:output_type -> snapshot.AddressPowerResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_query1_proto_init() }
func file_query1_proto_init() {
	if File_query1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query1_proto_goTypes,
		DependencyIndexes: file_query1_proto_depIdxs,
		MessageInfos:      file_query1_proto_msgTypes,
	}.Build()
	File_query1_proto = out.File
	file_query1_proto_rawDesc = nil
	file_query1_proto_goTypes = nil
	file_query1_proto_depIdxs = nil
}
