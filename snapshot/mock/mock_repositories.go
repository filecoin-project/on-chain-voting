// Copyright (C) 2023-2024 StorSwift Inc.
// This file is part of the PowerVoting library.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/repositories.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	service "power-snapshot/internal/service"
)

// MockIGithub is a mock of IGithub interface.
type MockIGithub struct {
	ctrl     *gomock.Controller
	recorder *MockIGithubMockRecorder
}

// MockIGithubMockRecorder is the mock recorder for MockIGithub.
type MockIGithubMockRecorder struct {
	mock *MockIGithub
}

// NewMockIGithub creates a new mock instance.
func NewMockIGithub(ctrl *gomock.Controller) *MockIGithub {
	mock := &MockIGithub{ctrl: ctrl}
	mock.recorder = &MockIGithubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGithub) EXPECT() *MockIGithubMockRecorder {
	return m.recorder
}

// GetRepoNames mocks base method.
func (m *MockIGithub) GetRepoNames(orgs, users []string, tokenManager *service.GitHubTokenManager) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepoNames", orgs, users, tokenManager)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetRepoNames indicates an expected call of GetRepoNames.
func (mr *MockIGithubMockRecorder) GetRepoNames(orgs, users, tokenManager interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepoNames", reflect.TypeOf((*MockIGithub)(nil).GetRepoNames), orgs, users, tokenManager)
}
